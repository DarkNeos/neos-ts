stages:
  - install
  - check
  - lint
  - test
  - wasm
  - build
  - deploy

npm_ci:
  stage: install
  tags:
    - linux
  script: npm ci
  artifacts:
    paths:
      - node_modules

.build_base:
  tags:
    - linux
  dependencies:
    - npm_ci

ts_check:
  dependencies:
    - .build_base
  stage: check
  tags:
    - linux
  script: tsc

rs_check:
  stage: check
  image: rust:latest
  tags:
    - linux
  script: cd rust-src && cargo check

ts_lint:
  extends: .build_base
  stage: lint
  tags:
    - linux
  script: npm run lint

rs_lint:
  stage: lint
  image: rust:latest
  tags:
    - linux
  script:
    - rustup component add clippy
    - cd rust-src && cargo clippy -- -Dwarnings

wasm_build:
  tags:
    - linux
  image: rust:latest
  stage: wasm
  extends:
    - .build_base
  before_script:
    - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
  script:
    - cd rust-src && wasm-pack build
  artifacts:
    paths:
      - rust-src/pkg
      - node_modules

npm_build:
  dependencies:
    - wasm_build
  stage: build
  image: git-registry.mycard.moe/mycard/docker-runner-base:master-x86
  tags:
    - linux
  script:
    - mv neos.config.prod.json neos.config.json
    - npm run build:prod
  artifacts:
    paths:
      - dist

deploy:
  stage: deploy
  tags:
    - linux
  only:
    - main
  dependencies: 
    - npm_build
  script:
    - mv neos-assets dist/
    - aws s3 --endpoint=https://minio.mycard.moe:9000 sync --delete dist/ s3://mycard/neos
